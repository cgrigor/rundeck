language: rust
services: docker

env:
  global:
    - CRATE_NAME=rundeck
    - PKG_CONFIG_ALLOW_CROSS=1

cache: cargo

branches:
  except:
    - /^.*\.tmp$/

only_master_and_tag: &only_master_and_tag
  if: branch IN (master, trying, staging) AND tag =~ ^v\d+\.\d+\.\d+.*$

matrix:
  include:

    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      addons:
        apt:
          packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - binutils-dev
            - cmake
          sources:
            - kalakris-cmake

    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
      <<: *only_master_and_tag

    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl STD=1 OPENSSL=0.5.5  RUN=1
      <<: *only_master_and_tag
    # Fail, must investigate
    # - os: linux
    #   rust: stable
    #   env: TARGET=i686-unknown-linux-musl STD=1 OPENSSL=0.5.5  RUN=1

    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
      <<: *only_master_and_tag

    - os: osx
      rust: stable
      env: TARGET=i686-apple-darwin
      <<: *only_master_and_tag

    # Beta channel.
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu
      <<: *only_master_and_tag

    # Nightly channel.
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
      <<: *only_master_and_tag

    # Code formatting check
    - os: linux
      rust: nightly-2017-10-09
      env: CLIPPY_VERS="0.0.165"
      install: true
      before_script: |
        [[ "$(cargo +nightly-2017-10-09 clippy --version)" != "$CLIPPY_VERS" ]] && \
        cargo +nightly-2017-10-09 install clippy --vers "$CLIPPY_VERS" --force || true
      script: |
        cargo +nightly-2017-10-09 clippy --all -- -D warnings

    - os: linux
      rust: nightly-2017-10-09
      env: RUSTFMT_VERS="0.2.8"
      install: true
      before_script: |
        [[ "$(cargo +nightly-2017-10-09 fmt -- --version)" != "$RUSTFMT_VERS"* ]] && \
        cargo +nightly-2017-10-09 install rustfmt-nightly --vers "$RUSTFMT_VERS" --force || true
      script: |
        cargo +nightly-2017-10-09 fmt --all -- --write-mode=diff

before_install: set -e

install:
  - ci/install.sh
  - source ~/.cargo/env || true

script: ci/script.sh

after_script: set +e

before_deploy: ci/before_deploy.sh

notifications:
  email:
    on_success: never
